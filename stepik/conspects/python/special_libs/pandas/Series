 Series:

 - это маркированная одномерная структура данных, ее можно представить, как таблицу с одной строкой:

    # s1 = pd.Series(data=None, index=None, dtype=None, name=None, copy=False, fastpath=False):
        * data – массив, словарь или скалярное значение, на базе которого будет построен Series;
        * index – список меток, который будет использоваться для доступа к элементам Series. Длина списка должна быть равна длине data;
        * dtype – объект numpy.dtype, определяющий тип данных
        * copy – создает копию массива данных, если параметр равен True в ином случае ничего не делает.

    # создание массива Series:
        * s = pd.Series([1, 2, 3, 4, 5]) - обычный одномерный массив
        * s = pd.Series([1, 2, 3, 4, 5], ['a', 'b', 'c', 'd', 'e']) - массив-словарь
        * s = pd.Series(ndarray_obj, ['a', 'b', 'c', 'd', 'e']) - массив-словарь из объекта numpy.ndarray
        * s = pd.Series({'a':1, 'b':2, 'c':3}) - массив-словарь из словаря
        * s = pd.Series(7, ['a', 'b', 'c']) - массив-словарь с 3-мя элементами "7"

    # работа с элементами Series:
        * s[2] - обращение по индексу (как в списках)
        * s['d'] - обращение по метке (как в словарях)
        * s[:2] - доступны слайсы
        * s[s <= 3] - доступны условные выражения (в примере выведет элементы <= 3)
        * s1 + s2 - доступно сложение объектов (в ответе будут складываться элементы, если их метки совпадают, иначе выдаст None)
        * s1 * 3 - доступно умножение (умножение каждого элемента на const, если умножаем на другой Series, то только по меткам)