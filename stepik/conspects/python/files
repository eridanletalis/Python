 Чтение из файла:

- file.readline() - чтение строки файла
- file.readline().strip() - обрезает символы \t, \n и т.п.

 Запись в файл:

- file.write(str(5) + '\n') - запись в файл (нужно явно перевести содержимое в строку)
- file.write("\n".join(lines)) - \n -разделитель, .join(lines) - объединение элементов списка

 Прочее:

- file = open('a.txt', 'r') - открытие файла(потока)
- with open('a.txt', 'r') as file, open('b.txt', 'r') as file2: ... - реализация AutoClosable (несколько файлов)
- os.path.join('.', 'dirname', 'file.txt') - создание строки пути, которая реализуется правильно при любой ОС
- for line in file: ... - перебор всех строк файла
- режимы работы с файлами:
    1) 'r' - открытие на чтение (является значением по умолчанию)
    2) 'w' - открытие на запись, содержимое файла удаляется, если файла не существует, создается новый
    3) 'x' - открытие на запись, если файла не существует, иначе исключение.
    4) 'a' - открытие на дозапись, информация добавляется в конец файла. (создается, если не было)
    5) 'b' - открытие в двоичном режиме.
    6) 't' - открытие в текстовом режиме (является значением по умолчанию).

 Работа с директориями:

- os - модуль для работы с системными файлами
- os.getcwd() - текущая директория
- os.listdir(dir) - список содержимого директории (по умолчанию - текущая)
- os.path.exists(file/dir_name) - существует ли файл/директория
- os.path.isdir(dir_name) - проверяет директория или нет

- os.walk(path) - генератор, возвращает (str(dir_name), [dirs], [files]) [dirs] и [files] - директории и папки внутри данной
- ПРИМЕР:
    for current_dir, dirs, files in os.walk(.):
        print(current_dir, dirs, files)

- shutil.copy(old_file_path, new_file_path) - копирует содержимое файла (создает если не было раньше)
- shutil.copytree(old_dir_path, new_dir_path) - копирует все содержимое директории в новую (создает, если не было)