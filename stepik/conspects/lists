 Списки:

- students = ['Ivan', 'Masha', "Sasha", 1, type(123.0)] - любые типы объектов
- при присвоении одного списка другой переменной, изменения будут отражаться в обеих переменных (ссылаются на 1 объект)

 Генерация списков:

- a

 Операции:

- for student in students:   - перебор списка (порядок соблюдается)
    print('Name =', student)
- students[0] - обращение по индексу
- students[::-1] - элементы списка в обратном порядке
- students[0] = 'Nikita' - можно менять значение в списке
- students + teachers - сложение
- students += ['Eric'] - добавление в конец списка
- students += 'Olga' - добавится 4 элемента по 1 букве из слова
- students * 3 - умножение
- if 'Ivan' in (not in) students: ... - проверка на наличие элемента

 Методы:

- students.append('Timur') - добавление в конец списка
- students.insert(1, 'Olga') - вставка по индексу (остальные сдвигаются вправо)
- student.remove('Sasha') - удаление первого встретившегося
- del students[0] - удаление по индексу
- students.index('Sasha') - индекс элемента (первого встретившегося)
- students.sort() - сортирует по возрастанию
- sorted(students) - возвращает сортированный список, при этом не меняя исходный
- min/max(students) - min и max значение, при условии, что элементы можно сравнивать
- students.reverse() - реверсирует список (аналогичные ей reversed(students) и students[::-1], которые возвращают др. список)
- students.extend(list) - объединяет 2 списка, добавляя 2-ой в конец

 Генерация списков:

- a = [0] * 5 - список [0, 0, 0, 0, 0]
- a = [0 for i in range(5)]
- a = [i * i for i in range(5)]
- a = [int(i) for i in input().split()]

 Двумерные списки:

- a = [[1, 2, 3], [1, 2, 3], [1, 2, 3]] - обычный двумерный список
- a = [[0 * n for i in range(n)] for i in range(m)] - генерация двумерного списка

